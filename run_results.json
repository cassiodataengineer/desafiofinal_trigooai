{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.8", "generated_at": "2025-08-12T21:55:06.354720Z", "invocation_id": "00a71a8a-4432-4959-b561-3dd47e8884ed", "invocation_started_at": "2025-08-12T21:55:01.556737Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-12T21:55:06.004587Z", "completed_at": "2025-08-12T21:55:06.011358Z"}, {"name": "execute", "started_at": "2025-08-12T21:55:06.011843Z", "completed_at": "2025-08-12T21:55:06.011859Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008301496505737305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.COVID19.dim_ocupacao_tipo", "compiled": true, "compiled_code": "SELECT * FROM (\r\n VALUES\r\n (1, 'Suspeito', 'Cl\u00ednico'),\r\n (2, 'Suspeito', 'UTI'),\r\n (3, 'Confirmado', 'Cl\u00ednico'),\r\n (4, 'Confirmado', 'UTI'),\r\n (5, 'COVID', 'Cl\u00ednico'),\r\n (6, 'COVID', 'UTI'),\r\n (7, 'Hospitalar', 'Cl\u00ednico'),\r\n (8, 'Hospitalar', 'UTI')\r\n) AS t(id_ocupacao_tipo, tipo_ocupacao, tipo_leito)", "relation_name": "COVID19.gold.dim_ocupacao_tipo", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-12T21:55:06.014025Z", "completed_at": "2025-08-12T21:55:06.016990Z"}, {"name": "execute", "started_at": "2025-08-12T21:55:06.017485Z", "completed_at": "2025-08-12T21:55:06.017494Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004422664642333984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.COVID19.stg_leito_ocupacao_2020", "compiled": true, "compiled_code": "SELECT\n  _id AS id_registro,\n  TO_TIMESTAMP_NTZ(data_notificacao) AS data_notificacao,\n  TRIM(cnes) AS cnes,\n  COALESCE(ocupacao_suspeito_cli, 0) AS ocupacao_suspeito_cli,\n  COALESCE(ocupacao_suspeito_uti, 0) AS ocupacao_suspeito_uti,\n  COALESCE(ocupacao_confirmado_cli, 0) AS ocupacao_confirmado_cli,\n  COALESCE(ocupacao_confirmado_uti, 0) AS ocupacao_confirmado_uti,\n  COALESCE(ocupacao_covid_uti, 0) AS ocupacao_covid_uti,\n  COALESCE(ocupacao_covid_cli, 0) AS ocupacao_covid_cli,\n  COALESCE(ocupacao_hospitalar_uti, 0) AS ocupacao_hospitalar_uti,\n  COALESCE(ocupacao_hospitalar_cli, 0) AS ocupacao_hospitalar_cli,\n  COALESCE(saida_suspeita_obitos, 0) AS saida_suspeita_obitos,\n  COALESCE(saida_suspeita_altas, 0) AS saida_suspeita_altas,\n  COALESCE(saida_confirmada_obitos, 0) AS saida_confirmada_obitos,\n  COALESCE(saida_confirmada_altas, 0) AS saida_confirmada_altas,\n  TRIM(origem) AS origem,\n  TRIM(p_usuario) AS p_usuario,\n  TRIM(estado_notificacao) AS estado_notificacao,\n  TRIM(municipio_notificacao) AS municipio_notificacao,\n  TRIM(estado) AS estado,\n  TRIM(municipio) AS municipio,\n  excluido,\n  validado,\n  created_at,\n  updated_at,\n  2020 AS ano_dados -- Adiciona o ano espec\u00edfico para este modelo\nFROM COVID19.BRONZE.RAW_LEITO_OCUPACAO_2020 -- Referencia a nova fonte\nWHERE excluido = FALSE", "relation_name": "COVID19.bronze.stg_leito_ocupacao_2020", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-12T21:55:06.019632Z", "completed_at": "2025-08-12T21:55:06.022413Z"}, {"name": "execute", "started_at": "2025-08-12T21:55:06.022863Z", "completed_at": "2025-08-12T21:55:06.022872Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004251241683959961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.COVID19.stg_leito_ocupacao_2021", "compiled": true, "compiled_code": "SELECT\n _id AS id_registro,\n TO_TIMESTAMP_NTZ(data_notificacao) AS data_notificacao,\n TRIM(cnes) AS cnes,\n COALESCE(ocupacao_suspeito_cli, 0) AS ocupacao_suspeito_cli,\n COALESCE(ocupacao_suspeito_uti, 0) AS ocupacao_suspeito_uti,\n COALESCE(ocupacao_confirmado_cli, 0) AS ocupacao_confirmado_cli,\n COALESCE(ocupacao_confirmado_uti, 0) AS ocupacao_confirmado_uti,\n COALESCE(ocupacao_covid_uti, 0) AS ocupacao_covid_uti,\n COALESCE(ocupacao_covid_cli, 0) AS ocupacao_covid_cli,\n COALESCE(ocupacao_hospitalar_uti, 0) AS ocupacao_hospitalar_uti,\n COALESCE(ocupacao_hospitalar_cli, 0) AS ocupacao_hospitalar_cli,\n COALESCE(saida_suspeita_obitos, 0) AS saida_suspeita_obitos,\n COALESCE(saida_suspeita_altas, 0) AS saida_suspeita_altas,\n COALESCE(saida_confirmada_obitos, 0) AS saida_confirmada_obitos,\n COALESCE(saida_confirmada_altas, 0) AS saida_confirmada_altas,\n TRIM(origem) AS origem,\n TRIM(p_usuario) AS p_usuario,\n TRIM(estado_notificacao) AS estado_notificacao,\n TRIM(municipio_notificacao) AS municipio_notificacao,\n TRIM(estado) AS estado,\n TRIM(municipio) AS municipio,\n excluido,\n validado,\n created_at,\n updated_at,\n 2021 AS ano_dados\nFROM COVID19.BRONZE.RAW_LEITO_OCUPACAO_2021\nWHERE excluido = FALSE", "relation_name": "COVID19.bronze.stg_leito_ocupacao_2021", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-12T21:55:06.024962Z", "completed_at": "2025-08-12T21:55:06.028688Z"}, {"name": "execute", "started_at": "2025-08-12T21:55:06.029168Z", "completed_at": "2025-08-12T21:55:06.029178Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0051653385162353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.COVID19.stg_leito_ocupacao_2022", "compiled": true, "compiled_code": "SELECT\n  _id AS id_registro,\n  TO_TIMESTAMP_NTZ(data_notificacao) AS data_notificacao,\n  TRIM(cnes) AS cnes,\n  COALESCE(ocupacao_suspeito_cli, 0) AS ocupacao_suspeito_cli,\n  COALESCE(ocupacao_suspeito_uti, 0) AS ocupacao_suspeito_uti,\n  COALESCE(ocupacao_confirmado_cli, 0) AS ocupacao_confirmado_cli,\n  COALESCE(ocupacao_confirmado_uti, 0) AS ocupacao_confirmado_uti,\n  COALESCE(ocupacao_covid_uti, 0) AS ocupacao_covid_uti,\n  COALESCE(ocupacao_covid_cli, 0) AS ocupacao_covid_cli,\n  COALESCE(ocupacao_hospitalar_uti, 0) AS ocupacao_hospitalar_uti,\n  COALESCE(ocupacao_hospitalar_cli, 0) AS ocupacao_hospitalar_cli,\n  COALESCE(saida_suspeita_obitos, 0) AS saida_suspeita_obitos,\n  COALESCE(saida_suspeita_altas, 0) AS saida_suspeita_altas,\n  COALESCE(saida_confirmada_obitos, 0) AS saida_confirmada_obitos,\n  COALESCE(saida_confirmada_altas, 0) AS saida_confirmada_altas,\n  TRIM(origem) AS origem,\n  TRIM(p_usuario) AS p_usuario,\n  TRIM(estado_notificacao) AS estado_notificacao,\n  TRIM(municipio_notificacao) AS municipio_notificacao,\n  TRIM(estado) AS estado,\n  TRIM(municipio) AS municipio,\n  excluido,\n  validado,\n  created_at,\n  updated_at,\n  2022 AS ano_dados -- Adiciona o ano espec\u00edfico para este modelo\nFROM COVID19.BRONZE.RAW_LEITO_OCUPACAO_2022 -- Referencia a nova fonte\nWHERE excluido = FALSE", "relation_name": "COVID19.bronze.stg_leito_ocupacao_2022", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-12T21:55:06.031587Z", "completed_at": "2025-08-12T21:55:06.034564Z"}, {"name": "execute", "started_at": "2025-08-12T21:55:06.035021Z", "completed_at": "2025-08-12T21:55:06.035028Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0044422149658203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.COVID19.stg_leito_ocupacao_consolidado", "compiled": true, "compiled_code": "-- Este modelo consolida os dados de ocupa\u00e7\u00e3o de leitos de todos os anos.\nSELECT * FROM COVID19.bronze.stg_leito_ocupacao_2020\nUNION ALL\nSELECT * FROM COVID19.bronze.stg_leito_ocupacao_2021\nUNION ALL\nSELECT * FROM COVID19.bronze.stg_leito_ocupacao_2022", "relation_name": "COVID19.bronze.stg_leito_ocupacao_consolidado", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-12T21:55:06.037455Z", "completed_at": "2025-08-12T21:55:06.040374Z"}, {"name": "execute", "started_at": "2025-08-12T21:55:06.040822Z", "completed_at": "2025-08-12T21:55:06.040830Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0043523311614990234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.COVID19.dim_cnes", "compiled": true, "compiled_code": "-- CTE para ler os dados da tabela de consulta de estabelecimentos\nWITH estabelecimentos_cnes AS (\n    SELECT\n        -- Aten\u00e7\u00e3o: verifique se os nomes das colunas aqui s\u00e3o os corretos da sua tabela\n        CAST(CO_CNES AS STRING) AS id_cnes,\n        NO_FANTASIA AS nm_estabelecimento\n    FROM\n        -- AQUI EST\u00c1 A CORRE\u00c7\u00c3O: Apontando para a tabela correta de estabelecimentos\n        COVID19.BRONZE.RAW_ESTABELECIMENTOS_CNES\n),\n\n-- CTE para pegar todos os c\u00f3digos CNES \u00fanicos dos seus dados de leitos\ncnes_nos_dados AS (\n    SELECT DISTINCT\n        cnes AS id_cnes\n    FROM\n         COVID19.bronze.stg_leito_ocupacao_consolidado\n    WHERE\n        cnes IS NOT NULL\n)\n\n-- Jun\u00e7\u00e3o para criar a dimens\u00e3o final\nSELECT\n    c.id_cnes,\n    COALESCE(cnes.nm_estabelecimento, 'N\u00e3o Informado') AS nm_estabelecimento\nFROM\n    cnes_nos_dados c\nLEFT JOIN\n    estabelecimentos_cnes cnes ON c.id_cnes = cnes.id_cnes", "relation_name": "COVID19.gold.dim_cnes", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-12T21:55:06.042915Z", "completed_at": "2025-08-12T21:55:06.045490Z"}, {"name": "execute", "started_at": "2025-08-12T21:55:06.045933Z", "completed_at": "2025-08-12T21:55:06.045941Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00399017333984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.COVID19.dim_data", "compiled": true, "compiled_code": "-- models/dimensions/dim_data.sql\nWITH datas_distintas AS (\n    -- Pega todas as datas \u00fanicas dos seus dados de leitos\n    SELECT DISTINCT CAST(data_notificacao AS DATE) AS data\n    FROM COVID19.bronze.stg_leito_ocupacao_consolidado\n)\nSELECT\n    -- Cria um ID num\u00e9rico para a data (ex: 20210131)\n    TO_CHAR(data, 'YYYYMMDD')::INT AS id_tempo,\n    data,\n    EXTRACT(YEAR FROM data) AS ano,\n    EXTRACT(MONTH FROM data) AS mes,\n    EXTRACT(DAY FROM data) AS dia,\n    EXTRACT(DAYOFWEEK FROM data) AS dia_da_semana\nFROM datas_distintas\nORDER BY data", "relation_name": "COVID19.gold.dim_data", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-12T21:55:06.048068Z", "completed_at": "2025-08-12T21:55:06.050698Z"}, {"name": "execute", "started_at": "2025-08-12T21:55:06.051165Z", "completed_at": "2025-08-12T21:55:06.051174Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004086017608642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.COVID19.dim_localidade", "compiled": true, "compiled_code": "WITH localidades_distintas AS (\n SELECT DISTINCT\n COALESCE(estado_notificacao, estado, 'Desconhecido') AS estado,\n COALESCE(municipio_notificacao, municipio, 'Desconhecido') AS\nmunicipio\n FROM COVID19.bronze.stg_leito_ocupacao_consolidado\n WHERE estado IS NOT NULL OR municipio IS NOT NULL\n)\nSELECT\n ROW_NUMBER() OVER (ORDER BY estado, municipio) AS id_localidade,\n estado,\n municipio\nFROM localidades_distintas\nORDER BY estado, municipio", "relation_name": "COVID19.gold.dim_localidade", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-12T21:55:06.053372Z", "completed_at": "2025-08-12T21:55:06.055875Z"}, {"name": "execute", "started_at": "2025-08-12T21:55:06.056341Z", "completed_at": "2025-08-12T21:55:06.056347Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.003958940505981445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.COVID19.dim_tempo", "compiled": true, "compiled_code": "WITH date_spine AS (\n SELECT DISTINCT DATE(data_notificacao) AS data\n FROM COVID19.bronze.stg_leito_ocupacao_consolidado\n WHERE data_notificacao IS NOT NULL\n)\nSELECT\n TO_NUMBER(TO_CHAR(data, 'YYYYMMDD')) AS id_tempo,\n data,\n EXTRACT(DAY FROM data) AS dia,\n EXTRACT(MONTH FROM data) AS mes,\n MONTHNAME(data) AS nome_mes,\n EXTRACT(YEAR FROM data) AS ano,\n EXTRACT(DAYOFWEEK FROM data) AS dia_da_semana,\n DAYNAME(data) AS nome_dia_da_semana,\n EXTRACT(QUARTER FROM data) AS trimestre,\n EXTRACT(WEEK FROM data) AS semana_do_ano,\n FALSE AS feriado -- Pode ser populado posteriormente com l\u00f3gica de feriados\nFROM date_spine\nORDER BY data", "relation_name": "COVID19.gold.dim_tempo", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-12T21:55:06.058430Z", "completed_at": "2025-08-12T21:55:06.060984Z"}, {"name": "execute", "started_at": "2025-08-12T21:55:06.061448Z", "completed_at": "2025-08-12T21:55:06.061455Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004001140594482422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.COVID19.dim_unidade_saude", "compiled": true, "compiled_code": "WITH unidades_distintas AS (\n SELECT DISTINCT\n TRIM(cnes) AS cnes\n FROM COVID19.bronze.stg_leito_ocupacao_consolidado\n WHERE cnes IS NOT NULL AND cnes != ''\n)\nSELECT\n cnes AS id_unidade_saude,\n cnes AS nome_unidade -- Pode ser enriquecido posteriormente com lookup de nomes\nFROM unidades_distintas\nORDER BY cnes", "relation_name": "COVID19.gold.dim_unidade_saude", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-12T21:55:06.063500Z", "completed_at": "2025-08-12T21:55:06.066405Z"}, {"name": "execute", "started_at": "2025-08-12T21:55:06.066859Z", "completed_at": "2025-08-12T21:55:06.066866Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004326343536376953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.COVID19.int_leitos_ocupacao_unificado", "compiled": true, "compiled_code": "-- models/intermediate/int_leitos_ocupacao_unificado.sql\n\n-- Este modelo serve como ponte, enriquecendo os dados de staging com\n-- as chaves das dimens\u00f5es antes de carregar a tabela de fatos.\n\nWITH staging_data AS (\n    SELECT * FROM COVID19.bronze.stg_leito_ocupacao_consolidado\n),\n\ndim_localidade AS (\n    SELECT * FROM COVID19.gold.dim_localidade\n)\n\nSELECT\n    stg.*,  -- Seleciona todas as colunas originais do staging\n    loc.id_localidade -- Adiciona a chave da dimens\u00e3o de localidade\n\nFROM staging_data stg\n\n-- Faz o JOIN com a dimens\u00e3o de localidade usando os nomes de texto (como definido anteriormente)\n-- para encontrar o ID correto.\nLEFT JOIN dim_localidade loc ON\n    UPPER(COALESCE(stg.municipio_notificacao, stg.municipio, 'Desconhecido')) = UPPER(loc.municipio)\n    AND UPPER(COALESCE(stg.estado_notificacao, stg.estado, 'Desconhecido')) = UPPER(loc.estado)", "relation_name": "COVID19.silver.int_leitos_ocupacao_unificado", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-12T21:55:06.069291Z", "completed_at": "2025-08-12T21:55:06.075803Z"}, {"name": "execute", "started_at": "2025-08-12T21:55:06.076286Z", "completed_at": "2025-08-12T21:55:06.076294Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00811457633972168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.COVID19.fact_ocupacao_leitos", "compiled": true, "compiled_code": "-- models/facts/fact_ocupacao_leitos.sql\n\n-- Passo 1: Referenciar a camada intermedi\u00e1ria, que j\u00e1 deve ter o ID da localidade.\n-- (Assumindo que voc\u00ea tem um modelo 'int_leitos_ocupacao_unificado' que j\u00e1 fez o join com dim_localidade para obter o id_localidade)\nWITH intermediate_data AS (\n    SELECT \n        *\n    FROM COVID19.silver.int_leitos_ocupacao_unificado -- ou ref('stg_leito_ocupacao_2021') se n\u00e3o tiver camada Silver\n    \n    \n    -- L\u00f3gica incremental para processar apenas dados novos\n    WHERE updated_at > (SELECT MAX(updated_at) FROM COVID19.gold.fact_ocupacao_leitos)\n    \n),\n\n-- Passo 2: Fazer o UNPIVOT completo de TODAS as colunas de ocupa\u00e7\u00e3o\nunpivoted_data AS (\n\n    -- Ocupa\u00e7\u00e3o por COVID\n    SELECT id_registro, data_notificacao, cnes, id_localidade, updated_at, 'COVID' AS tipo_ocupacao, 'Cl\u00ednico' AS tipo_leito, ocupacao_covid_cli AS ocupacao FROM intermediate_data\n    UNION ALL\n    SELECT id_registro, data_notificacao, cnes, id_localidade, updated_at, 'COVID' AS tipo_ocupacao, 'UTI' AS tipo_leito, ocupacao_covid_uti AS ocupacao FROM intermediate_data\n    \n    UNION ALL\n\n    -- Ocupa\u00e7\u00e3o Hospitalar Total\n    SELECT id_registro, data_notificacao, cnes, id_localidade, updated_at, 'Hospitalar' AS tipo_ocupacao, 'Cl\u00ednico' AS tipo_leito, ocupacao_hospitalar_cli AS ocupacao FROM intermediate_data\n    UNION ALL\n    SELECT id_registro, data_notificacao, cnes, id_localidade, updated_at, 'Hospitalar' AS tipo_ocupacao, 'UTI' AS tipo_leito, ocupacao_hospitalar_uti AS ocupacao FROM intermediate_data\n\n    -- Adicione aqui os outros tipos (Confirmado, Suspeito) se forem necess\u00e1rios para a an\u00e1lise\n    \n),\n\n-- Passo 3: Trazer as m\u00e9tricas de sa\u00eddas (\u00f3bito/alta) de volta para evitar duplica\u00e7\u00e3o\n-- As sa\u00eddas ocorrem uma vez por registro, n\u00e3o uma vez por tipo de leito.\nsaidas_data AS (\n    SELECT\n        id_registro,\n        saida_confirmada_obitos,\n        saida_confirmada_altas\n    FROM intermediate_data\n)\n\n-- Passo 4: Montar a tabela de fatos final\nSELECT\n    -- Cria uma chave prim\u00e1ria \u00fanica para a tabela de fatos\n    md5(cast(coalesce(cast(u.id_registro as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ot.id_ocupacao_tipo as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS id_fato,\n    \n    -- Chaves de dimens\u00e3o (Surrogate Keys)\n    t.id_tempo,\n    u.id_localidade,\n    u.cnes AS id_cnes, -- Idealmente, aqui tamb\u00e9m ter\u00edamos uma dimens\u00e3o e um ID num\u00e9rico\n    ot.id_ocupacao_tipo,\n    \n    -- M\u00e9tricas\n    u.ocupacao AS quantidade_leitos_ocupados,\n    s.saida_confirmada_obitos,\n    s.saida_confirmada_altas,\n\n    -- Metadados\n    u.updated_at\n\nFROM unpivoted_data u\n\n-- Join para buscar o id_tempo da dimens\u00e3o de data\nJOIN COVID19.gold.dim_data t ON DATE(u.data_notificacao) = t.data\n\n-- Join para buscar o id_ocupacao_tipo da dimens\u00e3o de tipos\nJOIN COVID19.gold.dim_ocupacao_tipo ot ON u.tipo_ocupacao = ot.tipo_ocupacao AND u.tipo_leito = ot.tipo_leito\n\n-- Join para trazer as m\u00e9tricas de sa\u00edda sem duplic\u00e1-las\nLEFT JOIN saidas_data s ON u.id_registro = s.id_registro\n\n-- Filtra registros que n\u00e3o t\u00eam m\u00e9tricas relevantes\nWHERE u.ocupacao > 0", "relation_name": "COVID19.gold.fact_ocupacao_leitos", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-12T21:55:06.078651Z", "completed_at": "2025-08-12T21:55:06.081442Z"}, {"name": "execute", "started_at": "2025-08-12T21:55:06.081890Z", "completed_at": "2025-08-12T21:55:06.081897Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0042057037353515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.COVID19.test_no_future_dates", "compiled": true, "compiled_code": "SELECT *\nFROM COVID19.gold.fact_ocupacao_leitos f\nJOIN COVID19.gold.dim_tempo t ON f.id_tempo = t.id_tempo\nWHERE t.data > CURRENT_DATE()", "relation_name": null, "batch_results": null}], "elapsed_time": 2.6052751541137695, "args": {"require_yaml_configuration_for_mf_time_spines": false, "log_level": "info", "print": true, "select": [], "project_dir": "/home/runner/work/desafiofinal_trigooai/desafiofinal_trigooai", "which": "generate", "require_generic_test_arguments_property": true, "partial_parse": true, "partial_parse_file_diff": true, "use_colors": true, "invocation_command": "dbt docs generate", "write_json": true, "require_all_warnings_handled_by_warn_error": false, "empty_catalog": false, "upload_to_artifacts_ingest_api": false, "profiles_dir": "/home/runner/.dbt", "require_resource_names_without_spaces": true, "static_parser": true, "compile": true, "use_fast_test_edges": false, "require_explicit_package_overrides_for_builtin_materializations": true, "quiet": false, "macro_debugging": false, "printer_width": 80, "validate_macro_args": false, "exclude": [], "send_anonymous_usage_stats": true, "require_batched_execution_for_custom_microbatch_strategy": false, "log_file_max_bytes": 10485760, "log_level_file": "debug", "indirect_selection": "eager", "source_freshness_run_project_hooks": true, "strict_mode": false, "defer": false, "favor_state": false, "warn_error_options": {"error": [], "warn": [], "silence": []}, "show_resource_report": false, "state_modified_compare_vars": false, "log_format": "default", "show_all_deprecations": false, "log_format_file": "debug", "static": false, "use_colors_file": true, "skip_nodes_if_on_run_start_fails": false, "version_check": true, "introspect": true, "vars": {}, "cache_selected_only": false, "populate_cache": true, "state_modified_compare_more_unrendered_values": false, "require_nested_cumulative_type_params": false, "log_path": "/home/runner/work/desafiofinal_trigooai/desafiofinal_trigooai/logs"}}